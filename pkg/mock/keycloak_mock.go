// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/keycloak/keycloak.go

// Package mock_keycloak is a generated GoMock package.
package mock_keycloak

import (
	gocloak "github.com/Nerzal/gocloak"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKeyCloakInterface is a mock of KeyCloakInterface interface
type MockKeyCloakInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKeyCloakInterfaceMockRecorder
}

// MockKeyCloakInterfaceMockRecorder is the mock recorder for MockKeyCloakInterface
type MockKeyCloakInterfaceMockRecorder struct {
	mock *MockKeyCloakInterface
}

// NewMockKeyCloakInterface creates a new mock instance
func NewMockKeyCloakInterface(ctrl *gomock.Controller) *MockKeyCloakInterface {
	mock := &MockKeyCloakInterface{ctrl: ctrl}
	mock.recorder = &MockKeyCloakInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKeyCloakInterface) EXPECT() *MockKeyCloakInterfaceMockRecorder {
	return m.recorder
}

// GetUsers mocks base method
func (m *MockKeyCloakInterface) GetUsers(realm string, param gocloak.GetUsersParams) (*[]gocloak.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", realm, param)
	ret0, _ := ret[0].(*[]gocloak.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers
func (mr *MockKeyCloakInterfaceMockRecorder) GetUsers(realm, param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockKeyCloakInterface)(nil).GetUsers), realm, param)
}

// CreateUser mocks base method
func (m *MockKeyCloakInterface) CreateUser(realm string, user gocloak.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", realm, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser
func (mr *MockKeyCloakInterfaceMockRecorder) CreateUser(realm, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockKeyCloakInterface)(nil).CreateUser), realm, user)
}

// DeleteUser mocks base method
func (m *MockKeyCloakInterface) DeleteUser(realm, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", realm, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser
func (mr *MockKeyCloakInterfaceMockRecorder) DeleteUser(realm, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockKeyCloakInterface)(nil).DeleteUser), realm, id)
}
